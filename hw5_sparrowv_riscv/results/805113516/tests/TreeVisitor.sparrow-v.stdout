.equiv @sbrk, 9
.equiv @print_string, 4
.equiv @print_char, 11
.equiv @print_int, 1
.equiv @exit 10
.equiv @exit2, 17

.text
jal _Main
li a0, @exit
ecall

.globl _Main
_Main:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 4
li t1, 4
mv a0, t0
jal alloc
mv t2, a0
mv a0, t1
jal alloc
mv t0, a0
sw t0, 0(t2)
la t1, TV_Start
sw t1, 0(t0)
lw t0, 0(t2)
lw t1, 0(t0)
mv s11, t1
mv a2, t2
jalr s11
mv s10, a0
mv t0, s10
mv a1, t0
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl TV_Start
TV_Start:
sw fp, -8(sp)
mv fp, sp
li t6, 16
sub sp, sp, t6
sw ra, -4(fp)
li t0, 52
li t1, 84
mv a0, t0
jal alloc
mv t2, a0
mv a0, t1
jal alloc
mv t0, a0
sw t0, 0(t2)
la t1, Tree_Init
sw t1, 0(t0)
la t1, Tree_SetRight
sw t1, 4(t0)
la t1, Tree_SetLeft
sw t1, 8(t0)
la t1, Tree_GetRight
sw t1, 12(t0)
la t1, Tree_GetLeft
sw t1, 16(t0)
la t1, Tree_GetKey
sw t1, 20(t0)
la t1, Tree_SetKey
sw t1, 24(t0)
la t1, Tree_GetHas_Right
sw t1, 28(t0)
la t1, Tree_GetHas_Left
sw t1, 32(t0)
la t1, Tree_SetHas_Left
sw t1, 36(t0)
la t1, Tree_SetHas_Right
sw t1, 40(t0)
la t1, Tree_Compare
sw t1, 44(t0)
la t1, Tree_Insert
sw t1, 48(t0)
la t1, Tree_Delete
sw t1, 52(t0)
la t1, Tree_Remove
sw t1, 56(t0)
la t1, Tree_RemoveRight
sw t1, 60(t0)
la t1, Tree_RemoveLeft
sw t1, 64(t0)
la t1, Tree_Search
sw t1, 68(t0)
la t1, Tree_Print
sw t1, 72(t0)
la t1, Tree_RecPrint
sw t1, 76(t0)
la t1, Tree_accept
sw t1, 80(t0)
mv t0, t2
mv t1, t0
lw t2, 0(t1)
lw t3, 0(t2)
li t2, 16
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 72(t2)
mv s11, t3
mv a2, t1
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t2, s10
mv t1, t2
li t1, 100000000
mv a1, t1
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t1, t0
lw t2, 0(t1)
lw t3, 48(t2)
li t2, 8
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 48(t2)
li t2, 24
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 48(t2)
li t2, 4
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 48(t2)
li t2, 12
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 48(t2)
li t2, 20
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 48(t2)
li t2, 28
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 48(t2)
li t2, 14
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 72(t2)
mv s11, t3
mv a2, t1
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t2, s10
mv t1, t2
li t1, 100000000
mv a1, t1
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
li t1, 20
li t2, 4
mv a0, t1
jal alloc
mv t3, a0
mv a0, t2
jal alloc
mv t1, a0
sw t1, 0(t3)
la t2, MyVisitor_visit
sw t2, 0(t1)
la t2, MyVisitor_visit
sw t2, 0(t1)
mv t1, t3
li t2, 50000000
mv a1, t2
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t2, t0
lw t3, 0(t2)
lw t4, 80(t3)
mv t3, t1
mv s11, t4
mv a2, t2
mv a3, t3
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t1, s10
mv t2, t1
li t1, 100000000
mv a1, t1
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t1, t0
lw t2, 0(t1)
lw t3, 68(t2)
li t2, 24
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv a1, t4
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t1, t0
lw t2, 0(t1)
lw t3, 68(t2)
li t2, 12
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv a1, t4
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t1, t0
lw t2, 0(t1)
lw t3, 68(t2)
li t2, 16
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv a1, t4
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t1, t0
lw t2, 0(t1)
lw t3, 68(t2)
li t2, 50
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv a1, t4
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t1, t0
lw t2, 0(t1)
lw t3, 68(t2)
li t2, 12
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv a1, t4
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t1, t0
lw t2, 0(t1)
lw t3, 52(t2)
li t2, 12
mv s11, t3
mv a2, t1
mv a3, t2
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t4, s10
mv t1, t4
mv t1, t0
lw t2, 0(t1)
lw t3, 72(t2)
mv s11, t3
mv a2, t1
sw t0, -12(fp)
jalr s11
mv s10, a0
lw t0, -12(fp)
mv t2, s10
mv t1, t2
mv t1, t0
lw t0, 0(t1)
lw t2, 68(t0)
li t0, 12
mv s11, t2
mv a2, t1
mv a3, t0
jalr s11
mv s10, a0
mv t3, s10
mv a1, t3
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
li t0, 0
sw t0, -16(fp)
lw a0, -16(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 16
jr ra

.globl Tree_Init
Tree_Init:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 16
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
sw t0, 0(t2)
li t0, 24
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
li t0, 0
sw t0, 0(t2)
li t0, 32
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
li t0, 0
sw t0, 0(t2)
li t0, 1
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_SetRight
Tree_SetRight:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 8
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
sw t0, 0(t2)
li t0, 1
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_SetLeft
Tree_SetLeft:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 0
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
sw t0, 0(t2)
li t0, 1
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_GetRight
Tree_GetRight:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 8
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_GetLeft
Tree_GetLeft:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 0
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_GetKey
Tree_GetKey:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 16
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_SetKey
Tree_SetKey:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 16
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
sw t0, 0(t2)
li t0, 1
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_GetHas_Right
Tree_GetHas_Right:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 32
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_GetHas_Left
Tree_GetHas_Left:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 24
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_SetHas_Left
Tree_SetHas_Left:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 24
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
sw t0, 0(t2)
li t0, 1
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_SetHas_Right
Tree_SetHas_Right:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 32
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
sw t0, 0(t2)
li t0, 1
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_Compare
Tree_Compare:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 0
mv t1, t0
mv t0, a4
li t2, 1
add t3, t0, t2
mv t0, t3
mv t2, a3
mv t3, a4
slt t4, t2, t3
bne t4, zero ,Tree_Compare_end_0
j Tree_Compare_if_else_7
Tree_Compare_end_0:
li t2, 0
mv t1, t2
j Tree_Compare_if_end_9
Tree_Compare_if_else_7:
mv t2, a3
mv t3, t0
slt t0, t2, t3
bne t0, zero ,Tree_Compare_end_1
j Tree_Compare_if_else_14
Tree_Compare_end_1:
li t0, 0
j Tree_Compare_if_end_15
Tree_Compare_if_else_14:
li t0, 1
Tree_Compare_if_end_15:
bne t0, zero ,Tree_Compare_end_2
j Tree_Compare_if_else_16
Tree_Compare_end_2:
li t0, 0
mv t1, t0
j Tree_Compare_if_end_18
Tree_Compare_if_else_16:
li t0, 1
mv t1, t0
Tree_Compare_if_end_18:
Tree_Compare_if_end_9:
mv t0, t1
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_Insert
Tree_Insert:
sw fp, -8(sp)
mv fp, sp
li t6, 224
sub sp, sp, t6
sw ra, -4(fp)
sw s3, -12(fp)
sw s4, -16(fp)
sw s5, -20(fp)
sw s6, -24(fp)
sw s7, -28(fp)
sw s8, -32(fp)
sw s9, -36(fp)
sw s1, -40(fp)
sw s2, -44(fp)
li t0, 52
li t1, 84
mv a0, t0
jal alloc
mv t2, a0
mv a0, t1
jal alloc
mv t0, a0
sw t0, 0(t2)
la t1, Tree_Init
sw t1, 0(t0)
la t1, Tree_SetRight
sw t1, 4(t0)
la t1, Tree_SetLeft
sw t1, 8(t0)
la t1, Tree_GetRight
sw t1, 12(t0)
la t1, Tree_GetLeft
sw t1, 16(t0)
la t1, Tree_GetKey
sw t1, 20(t0)
la t1, Tree_SetKey
sw t1, 24(t0)
la t1, Tree_GetHas_Right
sw t1, 28(t0)
la t1, Tree_GetHas_Left
sw t1, 32(t0)
la t1, Tree_SetHas_Left
sw t1, 36(t0)
la t1, Tree_SetHas_Right
sw t1, 40(t0)
la t1, Tree_Compare
sw t1, 44(t0)
la t1, Tree_Insert
sw t1, 48(t0)
la t1, Tree_Delete
sw t1, 52(t0)
la t1, Tree_Remove
sw t1, 56(t0)
la t1, Tree_RemoveRight
sw t1, 60(t0)
la t1, Tree_RemoveLeft
sw t1, 64(t0)
la t1, Tree_Search
sw t1, 68(t0)
la t1, Tree_Print
sw t1, 72(t0)
la t1, Tree_RecPrint
sw t1, 76(t0)
la t1, Tree_accept
sw t1, 80(t0)
mv t0, t2
mv t1, t0
lw t2, 0(t1)
lw t3, 0(t2)
mv t2, a3
mv s11, t3
sw a2, -48(fp)
sw a3, -52(fp)
mv a2, t1
mv a3, t2
sw t0, -56(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw t0, -56(fp)
mv t4, s10
mv t1, t4
mv t1, a2
mv t2, t1
li t1, 1
mv t3, t1
Tree_Insert_while32:
mv t1, t3
bne t1, zero ,Tree_Insert_end_3
j Tree_Insert_break_while_34
Tree_Insert_end_3:
mv t4, t2
lw t5, 0(t4)
lw s1, 20(t5)
mv s11, s1
sw a3, -52(fp)
mv a2, t4
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a3, -52(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
mv s2, s10
mv s3, s2
mv s4, a3
mv s5, s3
slt s6, s4, s5
bne s6, zero ,Tree_Insert_end_4
j Tree_Insert_if_else_42
Tree_Insert_end_4:
mv s7, t2
lw s8, 0(s7)
lw s9, 32(s8)
mv s11, s9
sw a3, -52(fp)
mv a2, s7
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a3, -52(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
mv a2, s10
bne a2, zero ,Tree_Insert_end_5
j Tree_Insert_if_else_47
Tree_Insert_end_5:
mv a4, t2
lw a5, 0(a4)
lw a6, 16(a5)
mv s11, a6
sw a2, -80(fp)
sw a3, -52(fp)
sw a4, -84(fp)
sw a5, -88(fp)
sw a6, -92(fp)
lw a2, -84(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -80(fp)
lw a3, -52(fp)
lw a4, -84(fp)
lw a5, -88(fp)
lw a6, -92(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
mv a7, s10
mv t2, a7
j Tree_Insert_if_end_52
Tree_Insert_if_else_47:
li s10, 0
sw s10, -96(fp)
lw s11, -96(fp)
mv t3, s11
mv s10, t2
sw s10, -100(fp)
lw s11, -100(fp)
lw s10, 0(s11)
sw s10, -104(fp)
lw s11, -104(fp)
lw s10, 36(s11)
sw s10, -108(fp)
li s10, 1
sw s10, -112(fp)
lw s11, -108(fp)
sw a2, -80(fp)
sw a3, -52(fp)
sw a4, -84(fp)
sw a5, -88(fp)
sw a6, -92(fp)
sw a7, -116(fp)
lw a2, -100(fp)
lw a3, -112(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -80(fp)
lw a3, -52(fp)
lw a4, -84(fp)
lw a5, -88(fp)
lw a6, -92(fp)
lw a7, -116(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -120(fp)
lw s11, -120(fp)
mv s10, s11
sw s10, -124(fp)
mv s10, t2
sw s10, -128(fp)
lw s11, -128(fp)
lw s10, 0(s11)
sw s10, -132(fp)
lw s11, -132(fp)
lw s10, 8(s11)
sw s10, -136(fp)
mv s10, t0
sw s10, -140(fp)
lw s11, -136(fp)
sw a2, -80(fp)
sw a3, -52(fp)
sw a4, -84(fp)
sw a5, -88(fp)
sw a6, -92(fp)
sw a7, -116(fp)
lw a2, -128(fp)
lw a3, -140(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -80(fp)
lw a3, -52(fp)
lw a4, -84(fp)
lw a5, -88(fp)
lw a6, -92(fp)
lw a7, -116(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -144(fp)
lw s11, -144(fp)
mv s10, s11
sw s10, -124(fp)
Tree_Insert_if_end_52:
j Tree_Insert_if_end_64
Tree_Insert_if_else_42:
mv s10, t2
sw s10, -148(fp)
lw s11, -148(fp)
lw s10, 0(s11)
sw s10, -152(fp)
lw s11, -152(fp)
lw s10, 28(s11)
sw s10, -156(fp)
lw s11, -156(fp)
sw a2, -80(fp)
sw a3, -52(fp)
sw a4, -84(fp)
sw a5, -88(fp)
sw a6, -92(fp)
sw a7, -116(fp)
lw a2, -148(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -80(fp)
lw a3, -52(fp)
lw a4, -84(fp)
lw a5, -88(fp)
lw a6, -92(fp)
lw a7, -116(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -160(fp)
lw s10, -160(fp)
bne s10, zero ,Tree_Insert_end_6
j Tree_Insert_if_else_69
Tree_Insert_end_6:
mv s10, t2
sw s10, -164(fp)
lw s11, -164(fp)
lw s10, 0(s11)
sw s10, -168(fp)
lw s11, -168(fp)
lw s10, 12(s11)
sw s10, -172(fp)
lw s11, -172(fp)
sw a2, -80(fp)
sw a3, -52(fp)
sw a4, -84(fp)
sw a5, -88(fp)
sw a6, -92(fp)
sw a7, -116(fp)
lw a2, -164(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -80(fp)
lw a3, -52(fp)
lw a4, -84(fp)
lw a5, -88(fp)
lw a6, -92(fp)
lw a7, -116(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -176(fp)
lw s11, -176(fp)
mv t2, s11
j Tree_Insert_if_end_74
Tree_Insert_if_else_69:
li s10, 0
sw s10, -180(fp)
lw s11, -180(fp)
mv t3, s11
mv s10, t2
sw s10, -184(fp)
lw s11, -184(fp)
lw s10, 0(s11)
sw s10, -188(fp)
lw s11, -188(fp)
lw s10, 40(s11)
sw s10, -192(fp)
li s10, 1
sw s10, -196(fp)
lw s11, -192(fp)
sw a2, -80(fp)
sw a3, -52(fp)
sw a4, -84(fp)
sw a5, -88(fp)
sw a6, -92(fp)
sw a7, -116(fp)
lw a2, -184(fp)
lw a3, -196(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -80(fp)
lw a3, -52(fp)
lw a4, -84(fp)
lw a5, -88(fp)
lw a6, -92(fp)
lw a7, -116(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -200(fp)
lw s11, -200(fp)
mv s10, s11
sw s10, -124(fp)
mv s10, t2
sw s10, -204(fp)
lw s11, -204(fp)
lw s10, 0(s11)
sw s10, -208(fp)
lw s11, -208(fp)
lw s10, 4(s11)
sw s10, -212(fp)
mv s10, t0
sw s10, -216(fp)
lw s11, -212(fp)
sw a2, -80(fp)
sw a3, -52(fp)
sw a4, -84(fp)
sw a5, -88(fp)
sw a6, -92(fp)
sw a7, -116(fp)
lw a2, -204(fp)
lw a3, -216(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -80(fp)
lw a3, -52(fp)
lw a4, -84(fp)
lw a5, -88(fp)
lw a6, -92(fp)
lw a7, -116(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -220(fp)
lw s11, -220(fp)
mv s10, s11
sw s10, -124(fp)
Tree_Insert_if_end_74:
Tree_Insert_if_end_64:
j Tree_Insert_while32
Tree_Insert_break_while_34:
li t0, 1
sw t0, -224(fp)
lw s3, -12(fp)
lw s4, -16(fp)
lw s5, -20(fp)
lw s6, -24(fp)
lw s7, -28(fp)
lw s8, -32(fp)
lw s9, -36(fp)
lw s1, -40(fp)
lw s2, -44(fp)
lw a0, -224(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 224
jr ra

.globl Tree_Delete
Tree_Delete:
sw fp, -8(sp)
mv fp, sp
li t6, 284
sub sp, sp, t6
sw ra, -4(fp)
sw s3, -12(fp)
sw s4, -16(fp)
sw s5, -20(fp)
sw s6, -24(fp)
sw s7, -28(fp)
sw s8, -32(fp)
sw s9, -36(fp)
sw s1, -40(fp)
sw s2, -44(fp)
mv t0, a2
mv t1, t0
mv t0, a2
mv t2, t0
li t0, 1
mv t3, t0
li t0, 0
mv t4, t0
li t0, 1
mv t5, t0
Tree_Delete_while5:
mv t0, t3
bne t0, zero ,Tree_Delete_end_7
j Tree_Delete_break_while_7
Tree_Delete_end_7:
mv s1, t1
lw s2, 0(s1)
lw s3, 20(s2)
mv s11, s3
sw a2, -48(fp)
sw a3, -52(fp)
mv a2, s1
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
mv s4, s10
mv s5, s4
mv s6, a3
mv s7, s5
slt s8, s6, s7
bne s8, zero ,Tree_Delete_end_8
j Tree_Delete_if_else_15
Tree_Delete_end_8:
mv s9, t1
lw a4, 0(s9)
lw a5, 32(a4)
mv s11, a5
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -80(fp)
sw a5, -84(fp)
mv a2, s9
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
mv a6, s10
bne a6, zero ,Tree_Delete_end_9
j Tree_Delete_if_else_20
Tree_Delete_end_9:
mv a7, t1
mv t2, a7
mv s10, t1
sw s10, -88(fp)
lw s11, -88(fp)
lw s10, 0(s11)
sw s10, -92(fp)
lw s11, -92(fp)
lw s10, 16(s11)
sw s10, -96(fp)
lw s11, -96(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -100(fp)
sw a7, -104(fp)
lw a2, -88(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -100(fp)
lw a7, -104(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -108(fp)
lw s11, -108(fp)
mv t1, s11
j Tree_Delete_if_end_26
Tree_Delete_if_else_20:
li s10, 0
sw s10, -112(fp)
lw s11, -112(fp)
mv t3, s11
Tree_Delete_if_end_26:
j Tree_Delete_if_end_28
Tree_Delete_if_else_15:
mv s10, s5
sw s10, -116(fp)
mv s10, a3
sw s10, -120(fp)
lw s10, -116(fp)
lw s11, -120(fp)
slt s10, s10, s11
sw s10, -124(fp)
lw s10, -124(fp)
bne s10, zero ,Tree_Delete_end_10
j Tree_Delete_if_else_32
Tree_Delete_end_10:
mv s10, t1
sw s10, -128(fp)
lw s11, -128(fp)
lw s10, 0(s11)
sw s10, -132(fp)
lw s11, -132(fp)
lw s10, 28(s11)
sw s10, -136(fp)
lw s11, -136(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -100(fp)
sw a7, -104(fp)
lw a2, -128(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -100(fp)
lw a7, -104(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -140(fp)
lw s10, -140(fp)
bne s10, zero ,Tree_Delete_end_11
j Tree_Delete_if_else_37
Tree_Delete_end_11:
mv s10, t1
sw s10, -144(fp)
lw s11, -144(fp)
mv t2, s11
mv s10, t1
sw s10, -148(fp)
lw s11, -148(fp)
lw s10, 0(s11)
sw s10, -152(fp)
lw s11, -152(fp)
lw s10, 12(s11)
sw s10, -156(fp)
lw s11, -156(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -100(fp)
sw a7, -104(fp)
lw a2, -148(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -100(fp)
lw a7, -104(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -160(fp)
lw s11, -160(fp)
mv t1, s11
j Tree_Delete_if_end_43
Tree_Delete_if_else_37:
li s10, 0
sw s10, -164(fp)
lw s11, -164(fp)
mv t3, s11
Tree_Delete_if_end_43:
j Tree_Delete_if_end_45
Tree_Delete_if_else_32:
mv s10, t5
sw s10, -168(fp)
lw s10, -168(fp)
bne s10, zero ,Tree_Delete_end_12
j Tree_Delete_if_else_47
Tree_Delete_end_12:
mv s10, t1
sw s10, -172(fp)
lw s11, -172(fp)
lw s10, 0(s11)
sw s10, -176(fp)
lw s11, -176(fp)
lw s10, 28(s11)
sw s10, -180(fp)
lw s11, -180(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -100(fp)
sw a7, -104(fp)
lw a2, -172(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -100(fp)
lw a7, -104(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -184(fp)
lw s10, -184(fp)
bne s10, zero ,Tree_Delete_end_13
j Tree_Delete_if_else_54
Tree_Delete_end_13:
li s10, 0
sw s10, -188(fp)
j Tree_Delete_if_end_55
Tree_Delete_if_else_54:
li s10, 1
sw s10, -188(fp)
Tree_Delete_if_end_55:
mv s10, t1
sw s10, -192(fp)
lw s11, -192(fp)
lw s10, 0(s11)
sw s10, -196(fp)
lw s11, -196(fp)
lw s10, 32(s11)
sw s10, -200(fp)
lw s11, -200(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -100(fp)
sw a7, -104(fp)
lw a2, -192(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -100(fp)
lw a7, -104(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -204(fp)
lw s10, -204(fp)
bne s10, zero ,Tree_Delete_end_14
j Tree_Delete_if_else_61
Tree_Delete_end_14:
li s10, 0
sw s10, -208(fp)
j Tree_Delete_if_end_62
Tree_Delete_if_else_61:
li s10, 1
sw s10, -208(fp)
Tree_Delete_if_end_62:
lw s10, -188(fp)
lw s11, -208(fp)
mul s10, s10, s11
sw s10, -212(fp)
lw s10, -212(fp)
bne s10, zero ,Tree_Delete_end_15
j Tree_Delete_if_else_63
Tree_Delete_end_15:
li s10, 1
sw s10, -216(fp)
lw s11, -216(fp)
mv s10, s11
sw s10, -220(fp)
j Tree_Delete_if_end_65
Tree_Delete_if_else_63:
mv s10, a2
sw s10, -224(fp)
lw s11, -224(fp)
lw s10, 0(s11)
sw s10, -228(fp)
lw s11, -228(fp)
lw s10, 56(s11)
sw s10, -232(fp)
mv s10, t2
sw s10, -236(fp)
mv s10, t1
sw s10, -240(fp)
lw s11, -232(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -100(fp)
sw a7, -104(fp)
lw a2, -224(fp)
lw a3, -236(fp)
lw a4, -240(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -100(fp)
lw a7, -104(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -244(fp)
lw s11, -244(fp)
mv s10, s11
sw s10, -220(fp)
Tree_Delete_if_end_65:
j Tree_Delete_if_end_72
Tree_Delete_if_else_47:
mv s10, a2
sw s10, -248(fp)
lw s11, -248(fp)
lw s10, 0(s11)
sw s10, -252(fp)
lw s11, -252(fp)
lw s10, 56(s11)
sw s10, -256(fp)
mv s10, t2
sw s10, -260(fp)
mv s10, t1
sw s10, -264(fp)
lw s11, -256(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -100(fp)
sw a7, -104(fp)
lw a2, -248(fp)
lw a3, -260(fp)
lw a4, -264(fp)
sw t0, -56(fp)
sw t1, -60(fp)
sw t2, -64(fp)
sw t3, -68(fp)
sw t4, -72(fp)
sw t5, -76(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -100(fp)
lw a7, -104(fp)
lw t0, -56(fp)
lw t1, -60(fp)
lw t2, -64(fp)
lw t3, -68(fp)
lw t4, -72(fp)
lw t5, -76(fp)
sw s10, -268(fp)
lw s11, -268(fp)
mv s10, s11
sw s10, -220(fp)
Tree_Delete_if_end_72:
li s10, 1
sw s10, -272(fp)
lw s11, -272(fp)
mv t4, s11
li s10, 0
sw s10, -276(fp)
lw s11, -276(fp)
mv t3, s11
Tree_Delete_if_end_45:
Tree_Delete_if_end_28:
li s10, 0
sw s10, -280(fp)
lw s11, -280(fp)
mv t5, s11
j Tree_Delete_while5
Tree_Delete_break_while_7:
mv t0, t4
sw t0, -284(fp)
lw s3, -12(fp)
lw s4, -16(fp)
lw s5, -20(fp)
lw s6, -24(fp)
lw s7, -28(fp)
lw s8, -32(fp)
lw s9, -36(fp)
lw s1, -40(fp)
lw s2, -44(fp)
lw a0, -284(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 284
jr ra

.globl Tree_Remove
Tree_Remove:
sw fp, -8(sp)
mv fp, sp
li t6, 28
sub sp, sp, t6
sw ra, -4(fp)
mv t0, a4
lw t1, 0(t0)
lw t2, 32(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
sw a4, -20(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw a4, -20(fp)
mv t1, s10
bne t1, zero ,Tree_Remove_end_16
j Tree_Remove_if_else_4
Tree_Remove_end_16:
mv t0, a2
lw t1, 0(t0)
lw t2, 64(t1)
mv t1, a3
mv t3, a4
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
sw a4, -20(fp)
mv a2, t0
mv a3, t1
mv a4, t3
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw a4, -20(fp)
mv t4, s10
mv t0, t4
j Tree_Remove_if_end_11
Tree_Remove_if_else_4:
mv t0, a4
lw t1, 0(t0)
lw t2, 28(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
sw a4, -20(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw a4, -20(fp)
mv t1, s10
bne t1, zero ,Tree_Remove_end_17
j Tree_Remove_if_else_16
Tree_Remove_end_17:
mv t0, a2
lw t1, 0(t0)
lw t2, 60(t1)
mv t1, a3
mv t3, a4
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
sw a4, -20(fp)
mv a2, t0
mv a3, t1
mv a4, t3
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw a4, -20(fp)
mv t4, s10
mv t0, t4
j Tree_Remove_if_end_23
Tree_Remove_if_else_16:
mv t0, a4
lw t1, 0(t0)
lw t2, 20(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
mv t0, t1
mv t1, a3
lw t2, 0(t1)
lw t3, 16(t2)
mv s11, t3
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t1
sw t0, -24(fp)
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw t0, -24(fp)
mv t2, s10
lw t1, 0(t2)
lw t3, 20(t1)
mv s11, t3
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t2
sw t0, -24(fp)
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw t0, -24(fp)
mv t1, s10
mv t2, t1
mv t1, a2
lw t3, 0(t1)
lw t4, 44(t3)
mv t3, t0
mv t0, t2
mv s11, t4
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t1
mv a3, t3
mv a4, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t2, s10
bne t2, zero ,Tree_Remove_end_18
j Tree_Remove_if_else_41
Tree_Remove_end_18:
mv t0, a3
lw t1, 0(t0)
lw t2, 8(t1)
li t1, 40
li t3, 4
add t1, t1, t3
add t3, a2, t1
lw t1, 0(t3)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t3, s10
mv t0, t3
mv t0, a3
lw t1, 0(t0)
lw t2, 36(t1)
li t1, 0
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t3, s10
mv t0, t3
j Tree_Remove_if_end_55
Tree_Remove_if_else_41:
mv t0, a3
lw t1, 0(t0)
lw t2, 4(t1)
li t1, 40
li t3, 4
add t1, t1, t3
add t3, a2, t1
lw t1, 0(t3)
mv s11, t2
sw a3, -16(fp)
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
lw a3, -16(fp)
mv t3, s10
mv t0, t3
mv t0, a3
lw t1, 0(t0)
lw t2, 40(t1)
li t1, 0
mv s11, t2
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
mv t3, s10
mv t0, t3
Tree_Remove_if_end_55:
Tree_Remove_if_end_23:
Tree_Remove_if_end_11:
li t0, 1
sw t0, -28(fp)
lw a0, -28(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 28
jr ra

.globl Tree_RemoveRight
Tree_RemoveRight:
sw fp, -8(sp)
mv fp, sp
li t6, 108
sub sp, sp, t6
sw ra, -4(fp)
sw s3, -12(fp)
sw s4, -16(fp)
sw s5, -20(fp)
sw s6, -24(fp)
sw s7, -28(fp)
sw s8, -32(fp)
sw s9, -36(fp)
sw s1, -40(fp)
sw s2, -44(fp)
Tree_RemoveRight_while0:
mv t0, a4
lw t1, 0(t0)
lw t2, 28(t1)
mv s11, t2
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
mv a2, t0
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
mv t3, s10
bne t3, zero ,Tree_RemoveRight_end_19
j Tree_RemoveRight_break_while_5
Tree_RemoveRight_end_19:
mv t4, a4
lw t5, 0(t4)
lw s1, 24(t5)
mv s2, a4
lw s3, 0(s2)
lw s4, 12(s3)
mv s11, s4
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
mv a2, s2
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
sw t3, -72(fp)
sw t4, -76(fp)
sw t5, -80(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
lw t3, -72(fp)
lw t4, -76(fp)
lw t5, -80(fp)
mv s5, s10
lw s6, 0(s5)
lw s7, 20(s6)
mv s11, s7
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
mv a2, s5
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
sw t3, -72(fp)
sw t4, -76(fp)
sw t5, -80(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
lw t3, -72(fp)
lw t4, -76(fp)
lw t5, -80(fp)
mv s8, s10
mv s11, s1
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
mv a2, t4
mv a3, s8
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
sw t3, -72(fp)
sw t4, -76(fp)
sw t5, -80(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
lw t3, -72(fp)
lw t4, -76(fp)
lw t5, -80(fp)
mv s9, s10
mv a5, s9
mv a6, a4
mv a3, a6
mv a7, a4
lw s10, 0(a7)
sw s10, -84(fp)
lw s11, -84(fp)
lw s10, 12(s11)
sw s10, -88(fp)
lw s11, -88(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
sw a5, -92(fp)
sw a6, -96(fp)
sw a7, -100(fp)
lw a2, -100(fp)
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
sw t3, -72(fp)
sw t4, -76(fp)
sw t5, -80(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw a5, -92(fp)
lw a6, -96(fp)
lw a7, -100(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
lw t3, -72(fp)
lw t4, -76(fp)
lw t5, -80(fp)
sw s10, -104(fp)
lw s11, -104(fp)
mv a4, s11
j Tree_RemoveRight_while0
Tree_RemoveRight_break_while_5:
mv t0, a3
lw t1, 0(t0)
lw t2, 4(t1)
li t1, 40
li t3, 4
add t1, t1, t3
add t3, a2, t1
lw t1, 0(t3)
mv s11, t2
sw a3, -52(fp)
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
lw a3, -52(fp)
mv t3, s10
mv t0, t3
mv t0, a3
lw t1, 0(t0)
lw t2, 40(t1)
li t1, 0
mv s11, t2
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
mv t3, s10
mv t0, t3
li t0, 1
sw t0, -108(fp)
lw s3, -12(fp)
lw s4, -16(fp)
lw s5, -20(fp)
lw s6, -24(fp)
lw s7, -28(fp)
lw s8, -32(fp)
lw s9, -36(fp)
lw s1, -40(fp)
lw s2, -44(fp)
lw a0, -108(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 108
jr ra

.globl Tree_RemoveLeft
Tree_RemoveLeft:
sw fp, -8(sp)
mv fp, sp
li t6, 108
sub sp, sp, t6
sw ra, -4(fp)
sw s3, -12(fp)
sw s4, -16(fp)
sw s5, -20(fp)
sw s6, -24(fp)
sw s7, -28(fp)
sw s8, -32(fp)
sw s9, -36(fp)
sw s1, -40(fp)
sw s2, -44(fp)
Tree_RemoveLeft_while0:
mv t0, a4
lw t1, 0(t0)
lw t2, 32(t1)
mv s11, t2
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
mv a2, t0
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
mv t3, s10
bne t3, zero ,Tree_RemoveLeft_end_20
j Tree_RemoveLeft_break_while_5
Tree_RemoveLeft_end_20:
mv t4, a4
lw t5, 0(t4)
lw s1, 24(t5)
mv s2, a4
lw s3, 0(s2)
lw s4, 16(s3)
mv s11, s4
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
mv a2, s2
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
sw t3, -72(fp)
sw t4, -76(fp)
sw t5, -80(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
lw t3, -72(fp)
lw t4, -76(fp)
lw t5, -80(fp)
mv s5, s10
lw s6, 0(s5)
lw s7, 20(s6)
mv s11, s7
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
mv a2, s5
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
sw t3, -72(fp)
sw t4, -76(fp)
sw t5, -80(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
lw t3, -72(fp)
lw t4, -76(fp)
lw t5, -80(fp)
mv s8, s10
mv s11, s1
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
mv a2, t4
mv a3, s8
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
sw t3, -72(fp)
sw t4, -76(fp)
sw t5, -80(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
lw t3, -72(fp)
lw t4, -76(fp)
lw t5, -80(fp)
mv s9, s10
mv a5, s9
mv a6, a4
mv a3, a6
mv a7, a4
lw s10, 0(a7)
sw s10, -84(fp)
lw s11, -84(fp)
lw s10, 16(s11)
sw s10, -88(fp)
lw s11, -88(fp)
sw a2, -48(fp)
sw a3, -52(fp)
sw a4, -56(fp)
sw a5, -92(fp)
sw a6, -96(fp)
sw a7, -100(fp)
lw a2, -100(fp)
sw t0, -60(fp)
sw t1, -64(fp)
sw t2, -68(fp)
sw t3, -72(fp)
sw t4, -76(fp)
sw t5, -80(fp)
jalr s11
mv s10, a0
lw a2, -48(fp)
lw a3, -52(fp)
lw a4, -56(fp)
lw a5, -92(fp)
lw a6, -96(fp)
lw a7, -100(fp)
lw t0, -60(fp)
lw t1, -64(fp)
lw t2, -68(fp)
lw t3, -72(fp)
lw t4, -76(fp)
lw t5, -80(fp)
sw s10, -104(fp)
lw s11, -104(fp)
mv a4, s11
j Tree_RemoveLeft_while0
Tree_RemoveLeft_break_while_5:
mv t0, a3
lw t1, 0(t0)
lw t2, 8(t1)
li t1, 40
li t3, 4
add t1, t1, t3
add t3, a2, t1
lw t1, 0(t3)
mv s11, t2
sw a3, -52(fp)
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
lw a3, -52(fp)
mv t3, s10
mv t0, t3
mv t0, a3
lw t1, 0(t0)
lw t2, 36(t1)
li t1, 0
mv s11, t2
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
mv t3, s10
mv t0, t3
li t0, 1
sw t0, -108(fp)
lw s3, -12(fp)
lw s4, -16(fp)
lw s5, -20(fp)
lw s6, -24(fp)
lw s7, -28(fp)
lw s8, -32(fp)
lw s9, -36(fp)
lw s1, -40(fp)
lw s2, -44(fp)
lw a0, -108(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 108
jr ra

.globl Tree_Search
Tree_Search:
sw fp, -8(sp)
mv fp, sp
li t6, 156
sub sp, sp, t6
sw ra, -4(fp)
sw s3, -12(fp)
sw s4, -16(fp)
sw s5, -20(fp)
sw s6, -24(fp)
sw s7, -28(fp)
sw s8, -32(fp)
sw s9, -36(fp)
sw s1, -40(fp)
sw s2, -44(fp)
mv t0, a2
mv t1, t0
li t0, 1
mv t2, t0
li t0, 0
mv t3, t0
Tree_Search_while3:
mv t0, t2
bne t0, zero ,Tree_Search_end_21
j Tree_Search_break_while_5
Tree_Search_end_21:
mv t4, t1
lw t5, 0(t4)
lw s1, 20(t5)
mv s11, s1
sw a3, -48(fp)
mv a2, t4
sw t0, -52(fp)
sw t1, -56(fp)
sw t2, -60(fp)
sw t3, -64(fp)
sw t4, -68(fp)
sw t5, -72(fp)
jalr s11
mv s10, a0
lw a3, -48(fp)
lw t0, -52(fp)
lw t1, -56(fp)
lw t2, -60(fp)
lw t3, -64(fp)
lw t4, -68(fp)
lw t5, -72(fp)
mv s2, s10
mv s3, s2
mv s4, a3
mv s5, s3
slt s6, s4, s5
bne s6, zero ,Tree_Search_end_22
j Tree_Search_if_else_13
Tree_Search_end_22:
mv s7, t1
lw s8, 0(s7)
lw s9, 32(s8)
mv s11, s9
sw a3, -48(fp)
mv a2, s7
sw t0, -52(fp)
sw t1, -56(fp)
sw t2, -60(fp)
sw t3, -64(fp)
sw t4, -68(fp)
sw t5, -72(fp)
jalr s11
mv s10, a0
lw a3, -48(fp)
lw t0, -52(fp)
lw t1, -56(fp)
lw t2, -60(fp)
lw t3, -64(fp)
lw t4, -68(fp)
lw t5, -72(fp)
mv a2, s10
bne a2, zero ,Tree_Search_end_23
j Tree_Search_if_else_18
Tree_Search_end_23:
mv a4, t1
lw a5, 0(a4)
lw a6, 16(a5)
mv s11, a6
sw a2, -76(fp)
sw a3, -48(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -88(fp)
lw a2, -80(fp)
sw t0, -52(fp)
sw t1, -56(fp)
sw t2, -60(fp)
sw t3, -64(fp)
sw t4, -68(fp)
sw t5, -72(fp)
jalr s11
mv s10, a0
lw a2, -76(fp)
lw a3, -48(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -88(fp)
lw t0, -52(fp)
lw t1, -56(fp)
lw t2, -60(fp)
lw t3, -64(fp)
lw t4, -68(fp)
lw t5, -72(fp)
mv a7, s10
mv t1, a7
j Tree_Search_if_end_23
Tree_Search_if_else_18:
li s10, 0
sw s10, -92(fp)
lw s11, -92(fp)
mv t2, s11
Tree_Search_if_end_23:
j Tree_Search_if_end_25
Tree_Search_if_else_13:
mv s10, s3
sw s10, -96(fp)
mv s10, a3
sw s10, -100(fp)
lw s10, -96(fp)
lw s11, -100(fp)
slt s10, s10, s11
sw s10, -104(fp)
lw s10, -104(fp)
bne s10, zero ,Tree_Search_end_24
j Tree_Search_if_else_29
Tree_Search_end_24:
mv s10, t1
sw s10, -108(fp)
lw s11, -108(fp)
lw s10, 0(s11)
sw s10, -112(fp)
lw s11, -112(fp)
lw s10, 28(s11)
sw s10, -116(fp)
lw s11, -116(fp)
sw a2, -76(fp)
sw a3, -48(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -88(fp)
sw a7, -120(fp)
lw a2, -108(fp)
sw t0, -52(fp)
sw t1, -56(fp)
sw t2, -60(fp)
sw t3, -64(fp)
sw t4, -68(fp)
sw t5, -72(fp)
jalr s11
mv s10, a0
lw a2, -76(fp)
lw a3, -48(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -88(fp)
lw a7, -120(fp)
lw t0, -52(fp)
lw t1, -56(fp)
lw t2, -60(fp)
lw t3, -64(fp)
lw t4, -68(fp)
lw t5, -72(fp)
sw s10, -124(fp)
lw s10, -124(fp)
bne s10, zero ,Tree_Search_end_25
j Tree_Search_if_else_34
Tree_Search_end_25:
mv s10, t1
sw s10, -128(fp)
lw s11, -128(fp)
lw s10, 0(s11)
sw s10, -132(fp)
lw s11, -132(fp)
lw s10, 12(s11)
sw s10, -136(fp)
lw s11, -136(fp)
sw a2, -76(fp)
sw a3, -48(fp)
sw a4, -80(fp)
sw a5, -84(fp)
sw a6, -88(fp)
sw a7, -120(fp)
lw a2, -128(fp)
sw t0, -52(fp)
sw t1, -56(fp)
sw t2, -60(fp)
sw t3, -64(fp)
sw t4, -68(fp)
sw t5, -72(fp)
jalr s11
mv s10, a0
lw a2, -76(fp)
lw a3, -48(fp)
lw a4, -80(fp)
lw a5, -84(fp)
lw a6, -88(fp)
lw a7, -120(fp)
lw t0, -52(fp)
lw t1, -56(fp)
lw t2, -60(fp)
lw t3, -64(fp)
lw t4, -68(fp)
lw t5, -72(fp)
sw s10, -140(fp)
lw s11, -140(fp)
mv t1, s11
j Tree_Search_if_end_39
Tree_Search_if_else_34:
li s10, 0
sw s10, -144(fp)
lw s11, -144(fp)
mv t2, s11
Tree_Search_if_end_39:
j Tree_Search_if_end_41
Tree_Search_if_else_29:
li s10, 1
sw s10, -148(fp)
lw s11, -148(fp)
mv t3, s11
li s10, 0
sw s10, -152(fp)
lw s11, -152(fp)
mv t2, s11
Tree_Search_if_end_41:
Tree_Search_if_end_25:
j Tree_Search_while3
Tree_Search_break_while_5:
mv t0, t3
sw t0, -156(fp)
lw s3, -12(fp)
lw s4, -16(fp)
lw s5, -20(fp)
lw s6, -24(fp)
lw s7, -28(fp)
lw s8, -32(fp)
lw s9, -36(fp)
lw s1, -40(fp)
lw s2, -44(fp)
lw a0, -156(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 156
jr ra

.globl Tree_Print
Tree_Print:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
mv t0, a2
mv t1, t0
mv t0, a2
lw t2, 0(t0)
lw t3, 76(t2)
mv t2, t1
mv s11, t3
mv a2, t0
mv a3, t2
jalr s11
mv s10, a0
mv t1, s10
mv t0, t1
li t0, 1
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Tree_RecPrint
Tree_RecPrint:
sw fp, -8(sp)
mv fp, sp
li t6, 36
sub sp, sp, t6
sw ra, -4(fp)
mv t0, a3
lw t1, 0(t0)
lw t2, 32(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
bne t1, zero ,Tree_RecPrint_end_26
j Tree_RecPrint_if_else_4
Tree_RecPrint_end_26:
mv t0, a2
lw t1, 0(t0)
lw t2, 76(t1)
mv t1, a3
lw t3, 0(t1)
lw t4, 16(t3)
mv s11, t4
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t1
sw t0, -20(fp)
sw t2, -24(fp)
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw t0, -20(fp)
lw t2, -24(fp)
mv t3, s10
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
mv a3, t3
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
mv t0, t1
j Tree_RecPrint_if_end_13
Tree_RecPrint_if_else_4:
li t0, 1
mv t1, t0
Tree_RecPrint_if_end_13:
mv t0, a3
lw t1, 0(t0)
lw t2, 20(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
mv a1, t1
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t0, a3
lw t1, 0(t0)
lw t2, 28(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
bne t1, zero ,Tree_RecPrint_end_27
j Tree_RecPrint_if_else_23
Tree_RecPrint_end_27:
mv t0, a2
lw t1, 0(t0)
lw t2, 76(t1)
mv t1, a3
lw t3, 0(t1)
lw t4, 12(t3)
mv s11, t4
mv a2, t1
sw t0, -28(fp)
sw t2, -32(fp)
jalr s11
mv s10, a0
lw t0, -28(fp)
lw t2, -32(fp)
mv t3, s10
mv s11, t2
mv a2, t0
mv a3, t3
jalr s11
mv s10, a0
mv t1, s10
mv t0, t1
j Tree_RecPrint_if_end_32
Tree_RecPrint_if_else_23:
li t0, 1
mv t1, t0
Tree_RecPrint_if_end_32:
li t0, 1
sw t0, -36(fp)
lw a0, -36(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 36
jr ra

.globl Tree_accept
Tree_accept:
sw fp, -8(sp)
mv fp, sp
li t6, 12
sub sp, sp, t6
sw ra, -4(fp)
li t0, 333
mv a1, t0
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t0, a3
lw t1, 0(t0)
lw t2, 0(t1)
mv t1, a2
mv s11, t2
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
mv t3, s10
mv t0, t3
li t0, 0
sw t0, -12(fp)
lw a0, -12(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 12
jr ra

.globl Visitor_visit
Visitor_visit:
sw fp, -8(sp)
mv fp, sp
li t6, 28
sub sp, sp, t6
sw ra, -4(fp)
mv t0, a3
lw t1, 0(t0)
lw t2, 28(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
bne t1, zero ,Visitor_visit_end_28
j Visitor_visit_if_else_4
Visitor_visit_end_28:
li t0, 8
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
lw t1, 0(t0)
lw t3, 12(t1)
mv s11, t3
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
sw t2, -20(fp)
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw t2, -20(fp)
mv t1, s10
sw t1, 0(t2)
li t0, 8
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
lw t1, 0(t0)
lw t2, 80(t1)
mv t1, a2
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t3, s10
mv t0, t3
j Visitor_visit_if_end_22
Visitor_visit_if_else_4:
li t0, 0
mv t1, t0
Visitor_visit_if_end_22:
mv t0, a3
lw t1, 0(t0)
lw t2, 32(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
bne t1, zero ,Visitor_visit_end_29
j Visitor_visit_if_else_28
Visitor_visit_end_29:
li t0, 0
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
lw t1, 0(t0)
lw t3, 16(t1)
mv s11, t3
sw a2, -12(fp)
mv a2, t0
sw t2, -24(fp)
jalr s11
mv s10, a0
lw a2, -12(fp)
lw t2, -24(fp)
mv t1, s10
sw t1, 0(t2)
li t0, 0
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
lw t1, 0(t0)
lw t2, 80(t1)
mv t1, a2
mv s11, t2
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
mv t3, s10
mv t0, t3
j Visitor_visit_if_end_46
Visitor_visit_if_else_28:
li t0, 0
mv t1, t0
Visitor_visit_if_end_46:
li t0, 0
sw t0, -28(fp)
lw a0, -28(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 28
jr ra

.globl MyVisitor_visit
MyVisitor_visit:
sw fp, -8(sp)
mv fp, sp
li t6, 28
sub sp, sp, t6
sw ra, -4(fp)
mv t0, a3
lw t1, 0(t0)
lw t2, 28(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
bne t1, zero ,MyVisitor_visit_end_30
j MyVisitor_visit_if_else_4
MyVisitor_visit_end_30:
li t0, 8
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
lw t1, 0(t0)
lw t3, 12(t1)
mv s11, t3
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
sw t2, -20(fp)
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
lw t2, -20(fp)
mv t1, s10
sw t1, 0(t2)
li t0, 8
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
lw t1, 0(t0)
lw t2, 80(t1)
mv t1, a2
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t3, s10
mv t0, t3
j MyVisitor_visit_if_end_22
MyVisitor_visit_if_else_4:
li t0, 0
mv t1, t0
MyVisitor_visit_if_end_22:
mv t0, a3
lw t1, 0(t0)
lw t2, 20(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
mv a1, t1
li a0, @print_int
ecall
li a1, 10
li a0, 11
ecall
mv t0, a3
lw t1, 0(t0)
lw t2, 32(t1)
mv s11, t2
sw a2, -12(fp)
sw a3, -16(fp)
mv a2, t0
jalr s11
mv s10, a0
lw a2, -12(fp)
lw a3, -16(fp)
mv t1, s10
bne t1, zero ,MyVisitor_visit_end_31
j MyVisitor_visit_if_else_32
MyVisitor_visit_end_31:
li t0, 0
li t1, 4
add t0, t0, t1
add t2, a2, t0
li t0, 1
mv t3, t2
add t3, t3, t1
sw t0, 0(t3)
mv t0, a3
lw t1, 0(t0)
lw t3, 16(t1)
mv s11, t3
sw a2, -12(fp)
mv a2, t0
sw t2, -24(fp)
jalr s11
mv s10, a0
lw a2, -12(fp)
lw t2, -24(fp)
mv t1, s10
sw t1, 0(t2)
li t0, 0
li t1, 4
add t0, t0, t1
add t1, a2, t0
lw t0, 0(t1)
lw t1, 0(t0)
lw t2, 80(t1)
mv t1, a2
mv s11, t2
mv a2, t0
mv a3, t1
jalr s11
mv s10, a0
mv t3, s10
mv t0, t3
j MyVisitor_visit_if_end_50
MyVisitor_visit_if_else_32:
li t0, 0
mv t1, t0
MyVisitor_visit_if_end_50:
li t0, 0
sw t0, -28(fp)
lw a0, -28(fp)
lw ra, -4(fp)
lw fp, -8(fp)
addi sp, sp, 28
jr ra

.globl error
error:
mv a1, a0                                # Move msg address to a1
li a0, @print_string                     # Code for print_string ecall
ecall # Print error message in a1
li a1, 10                                # Load newline character
li a0, @print_char                       # Code for print_char ecall
ecall                                    # Print newline
li a0, @exit                             # Code for exit ecall
ecall                                    # Exit with code
abort_17:                                  # Infinite loop
j abort_17                               # Prevent fallthrough

.globl alloc
alloc:
mv a1, a0                                # Move requested size to a1
li a0, @sbrk                             # Code for ecall: sbrk
ecall                                    # Request a1 bytes
jr ra                                    # Return to caller

.data

.globl msg_0
msg_0:
.asciiz "null pointer"
.align 2

.globl msg_1
msg_1:
.asciiz "array index out of bounds"
.align 2

