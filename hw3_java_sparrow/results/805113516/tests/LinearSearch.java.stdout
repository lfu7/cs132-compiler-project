func _Main()
v2 = 20
v3 = 16
v1 = alloc(v2)
vmt_address4 = alloc(v3)
[v1 + 0] = vmt_address4
f5 = @LS_Print
[vmt_address4 + 4] = f5
f6 = @LS_Init
[vmt_address4 + 12] = f6
f7 = @LS_Start
[vmt_address4 + 0] = f7
f8 = @LS_Search
[vmt_address4 + 8] = f8
vmt_address9 = [v1 + 0]
f10 = [vmt_address9 + 0]
v11 = 10
v0 = call f10(v1 v11)
print(v0)
      return v0

func LS_Start(this sz)
v1 = this
vmt_address2 = [v1 + 0]
f3 = [vmt_address2 + 12]
v4 = sz
v0 = call f3(v1 v4)
aux01 = v0
v6 = this
vmt_address7 = [v6 + 0]
f8 = [vmt_address7 + 4]
v5 = call f8(v6)
aux02 = v5
v9 = 9999
print(v9)
v11 = this
vmt_address12 = [v11 + 0]
f13 = [vmt_address12 + 8]
v14 = 8
v10 = call f13(v11 v14)
print(v10)
v16 = this
vmt_address17 = [v16 + 0]
f18 = [vmt_address17 + 8]
v19 = 12
v15 = call f18(v16 v19)
print(v15)
v21 = this
vmt_address22 = [v21 + 0]
f23 = [vmt_address22 + 8]
v24 = 17
v20 = call f23(v21 v24)
print(v20)
v26 = this
vmt_address27 = [v26 + 0]
f28 = [vmt_address27 + 8]
v29 = 50
v25 = call f28(v26 v29)
print(v25)
v30 = 55
      return v30

func LS_Print(this)
v0 = 1
j = v0
while1:
v3 = j
v5 = 8
v6 = 4
v5 = v5 + v6
v7 = this + v5
v4 = [v7 + 0]
v2 = v3 < v4
if0 v2 goto break_while_8
v11 = 0
v12 = 4
v11 = v11 + v12
v13 = this + v11
v14 = v13
v14 = v14 + v12
v15 = [v14 + 0]
if0 v15 goto null_error16
goto no_null_error17
null_error16:
error("null pointer")
no_null_error17:
v10 = [v13 + 0]
v18 = j
v19 = [v10 + 0]
v20 = v18 < v19
if0 v20 goto if_else21
goto if_end22
if_else21:
error("array index out of bounds")
if_end22:
v23 = 4
v24 = v18 * v23
v24 = v24 + v23
v25 = v10 + v24
v9 = [v25 + 0]
print(v9)
v27 = j
v28 = 1
v26 = v27 + v28
j = v26
goto while1
break_while_8:
v29 = 0
      return v29

func LS_Search(this num)
v0 = 1
j = v0
v1 = 0
ls01 = v1
v2 = 0
ifound = v2
while3:
v5 = j
v7 = 8
v8 = 4
v7 = v7 + v8
v9 = this + v7
v6 = [v9 + 0]
v4 = v5 < v6
if0 v4 goto break_while_10
v13 = 0
v14 = 4
v13 = v13 + v14
v15 = this + v13
v16 = v15
v16 = v16 + v14
v17 = [v16 + 0]
if0 v17 goto null_error18
goto no_null_error19
null_error18:
error("null pointer")
no_null_error19:
v12 = [v15 + 0]
v20 = j
v21 = [v12 + 0]
v22 = v20 < v21
if0 v22 goto if_else23
goto if_end24
if_else23:
error("array index out of bounds")
if_end24:
v25 = 4
v26 = v20 * v25
v26 = v26 + v25
v27 = v12 + v26
v11 = [v27 + 0]
aux01 = v11
v29 = num
v30 = 1
v28 = v29 + v30
aux02 = v28
v32 = aux01
v33 = num
v31 = v32 < v33
if0 v31 goto if_else_34
v35 = 0
nt = v35
goto if_end_36
if_else_34:
v39 = aux01
v40 = aux02
v38 = v39 < v40
if0 v38 goto if_else_41
v37 = 0
goto if_end_42
if_else_41:
v37 = 1
if_end_42:
if0 v37 goto if_else_43
v44 = 0
nt = v44
goto if_end_45
if_else_43:
v46 = 1
ls01 = v46
v47 = 1
ifound = v47
v49 = 8
v50 = 4
v49 = v49 + v50
v51 = this + v49
v48 = [v51 + 0]
j = v48
if_end_45:
if_end_36:
v53 = j
v54 = 1
v52 = v53 + v54
j = v52
goto while3
break_while_10:
v55 = ifound
      return v55

func LS_Init(this sz)
v0 = 8
v1 = 4
v0 = v0 + v1
v2 = this + v0
v3 = 1
v4 = v2
v4 = v4 + v1
[v4 + 0] = v3
v5 = sz
[v2 + 0] = v5
v6 = 0
v7 = 4
v6 = v6 + v7
v8 = this + v6
v9 = 1
v10 = v8
v10 = v10 + v7
[v10 + 0] = v9
v12 = sz
v14 = 4
v13 = v12 * v14
v13 = v13 + v14
v11 = alloc(v13)
[v11 + 0] = v12
[v8 + 0] = v11
v15 = 1
j = v15
v18 = 8
v19 = 4
v18 = v18 + v19
v20 = this + v18
v17 = [v20 + 0]
v21 = 1
v16 = v17 + v21
k = v16
while22:
v24 = j
v26 = 8
v27 = 4
v26 = v26 + v27
v28 = this + v26
v25 = [v28 + 0]
v23 = v24 < v25
if0 v23 goto break_while_29
v31 = 2
v32 = j
v30 = v31 * v32
aux01 = v30
v34 = k
v35 = 3
v33 = v34 - v35
aux02 = v33
v36 = 0
v37 = 4
v36 = v36 + v37
v38 = this + v36
v39 = 1
v40 = v38
v40 = v40 + v37
[v40 + 0] = v39
v41 = [v38 + 0]
if0 v41 goto null_error42
goto no_null_error43
null_error42:
error("null pointer")
no_null_error43:
v44 = j
v45 = [v41 + 0]
v46 = v44 < v45
if0 v46 goto if_else47
goto if_end48
if_else47:
error("array index out of bounds")
if_end48:
v49 = 4
v50 = v44 * v49
v50 = v50 + v49
v51 = v41 + v50
v53 = aux01
v54 = aux02
v52 = v53 + v54
[v51 + 0] = v52
v56 = j
v57 = 1
v55 = v56 + v57
j = v55
v59 = k
v60 = 1
v58 = v59 - v60
k = v58
goto while22
break_while_29:
v61 = 0
      return v61


