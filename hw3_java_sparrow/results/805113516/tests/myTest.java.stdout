func _Main()
v2 = 20
v3 = 8
v1 = alloc(v2)
vmt_address4 = alloc(v3)
[v1 + 0] = vmt_address4
f5 = @LS_Init
[vmt_address4 + 4] = f5
f6 = @LS_Start
[vmt_address4 + 0] = f6
vmt_address7 = [v1 + 0]
f8 = [vmt_address7 + 0]
v9 = 10
v0 = call f8(v1 v9)
print(v0)
      return v0

func LS_Start(this sz)
v1 = this
vmt_address2 = [v1 + 0]
f3 = [vmt_address2 + 4]
v4 = sz
v0 = call f3(v1 v4)
aux01 = v0
v5 = 55
      return v5

func LS_Init(this sz)
v0 = 8
v1 = 4
v0 = v0 + v1
v2 = this + v0
v3 = 1
v4 = v2
v4 = v4 + v1
[v4 + 0] = v3
v5 = sz
[v2 + 0] = v5
v6 = 0
v7 = 4
v6 = v6 + v7
v8 = this + v6
v9 = 1
v10 = v8
v10 = v10 + v7
[v10 + 0] = v9
v12 = sz
v14 = 4
v13 = v12 * v14
v13 = v13 + v14
v11 = alloc(v13)
[v11 + 0] = v12
[v8 + 0] = v11
v15 = 1
j = v15
v18 = 8
v19 = 4
v18 = v18 + v19
v20 = this + v18
v17 = [v20 + 0]
v21 = 1
v16 = v17 + v21
k = v16
while22:
v24 = j
v26 = 8
v27 = 4
v26 = v26 + v27
v28 = this + v26
v25 = [v28 + 0]
v23 = v24 < v25
if0 v23 goto break_while_29
v31 = j
v32 = 1
v30 = v31 + v32
j = v30
goto while22
break_while_29:
v33 = 0
      return v33


